}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=2)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
print(hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared")))
} else {
message("no transformation needed for",var1)
print(hist(data[[var1]],main=paste("histogram of",var1)))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=2)
data <- chronotype %>%
dplyr::select(T1_cbaitot)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
print(hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log")))
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
print(hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared")))
} else {
message("no transformation needed for",var1)
print(hist(data[[var1]],main=paste("histogram of",var1)))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=2)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
} else {
message("no transformation needed for",var1)
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=2)
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
data <- skew_function("T1_cbaitot",data,pos_skew=1)
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
print(hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log")))
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
print(hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared")))
} else {
message("no transformation needed for",var1)
print(hist(data[[var1]],main=paste("histogram of",var1)))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
print(hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log")))
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
test <- hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
hist
test <- hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
test <- hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))[1]
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))[1]
test <- print(hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log")))
test
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
print(hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared")))
} else {
message("no transformation needed for",var1)
print(hist(data[[var1]],main=paste("histogram of",var1)))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared"))
} else {
message("no transformation needed for",var1)
hist(data[[var1]],main=paste("histogram of",var1))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
data <- chronotype %>%
dplyr::select(T1_cbaitot)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
message(var1,"had positive skew and was log-transformed")
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared"))
} else {
message("no transformation needed for",var1)
hist(data[[var1]],main=paste("histogram of",var1))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
message(var1,"had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
message(var1,"had negative skew and was sqared")
hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared"))
} else {
message("no transformation needed for",var1)
hist(data[[var1]],main=paste("histogram of",var1))
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
hist(data[[paste0(var1,"_log")]],main=paste("histogram of",var1,"_log"))
message(var1," had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared"))
message(var1," had negative skew and was sqared")
} else {
hist(data[[var1]],main=paste("histogram of",var1))
message("no transformation needed for ",var1)
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
hist(data[[paste0(var1,"_log")]],main=paste0("histogram of ",var1,"_log"),xlab=paste0(var1,"_log"))
message(var1," had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
hist(data[[paste0(var1,"_squared")]],main=paste("histogram of",var1,"_sqared"),xlab=paste0(var1,"_sqared"))
message(var1," had negative skew and was sqared")
} else {
hist(data[[var1]],main=paste0("histogram of ",var1),xlab=paste(var1))
message("no transformation needed for ",var1)
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
skew_function <- function(var1, data, pos_skew=NULL, neg_skew=NULL) {
if(missing(pos_skew)) {
pos_skew <- 2.0
}
if(missing(neg_skew)) {
neg_skew <- -2.0
}
var1_skew <- psych::skew(data[[var1]], na.rm = TRUE) #Calculate skew for variable
#1 If greater than 2 positive skew, then log-transform, else leave the same
if (var1_skew > pos_skew) {
data[paste0(var1,"_log")] <- log10(data[var1])
hist(data[[paste0(var1,"_log")]],main=paste0("Histogram of ",var1,"_log"),xlab=paste0(var1,"_log"))
message(var1," had positive skew and was log-transformed")
} else if (var1_skew < neg_skew){
data[paste0(var1,"_squared")] <- data[var1]^2
hist(data[[paste0(var1,"_squared")]],main=paste("Histogram of",var1,"_sqared"),xlab=paste0(var1,"_sqared"))
message(var1," had negative skew and was sqared")
} else {
hist(data[[var1]],main=paste0("Histogram of ",var1),xlab=paste(var1))
message("no transformation needed for ",var1)
}
data
}
data <- skew_function("T1_cbaitot",data,pos_skew=1)
unloadNamespace("semTools")
rm(list=ls())
setwd("~/Dropbox/Manuscripts/2018/Chronotype Depression/Data/")
library(ggplot2)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
text=element_text(family='Helvetica'),
plot.title = element_text(hjust = 0.5))
packages <- c("rio","tidyverse","reshape","lme4","interactions","jtools","lmerTest","Amelia","mice","lavaan","semTools","janitor","stargazer","plotluck")
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
lapply(packages, library, character.only = TRUE)
options(scipen=999)
chronotype <- import("EM3_2013_T1_T4.sav")
chronotype <- dplyr::select(chronotype, -contains("MEQ"))
chronotype <- dplyr::select(chronotype, -contains("Split"))
chronotype <- dplyr::select(chronotype, -contains("RES"))
T1 <- import("Raw Data/T1MEQR.sav")
T2 <- import("Raw Data/T2MEQR.sav")
T3 <- import("Raw Data/T3MEQR.sav")
#T4 <- import("T4_PIQ_Qs_Yth_307_MEQ_scored.xlsx")
load("Raw Data/alternate_T4_data.RData")
T4 <- data
T4$case_no <- as.numeric(T4$case_no)
chronotype$Case_no <- as.factor(chronotype$Case_no)
colnames(T1)[colnames(T1)=="ParticipantID"] <- "Case_no"
T1$Case_no <- as.factor(T1$Case_no)
T1 <- subset(T1, select = -Gender)
colnames(T2)[colnames(T2)=="ParticipantID"] <- "Case_no"
T2$Case_no <- as.factor(T2$Case_no)
T2 <- subset(T2, select = -Gender)
colnames(T3)[colnames(T3)=="ParticipantID"] <- "Case_no"
T3$Case_no <- as.factor(T3$Case_no)
T3 <- subset(T3, select = -Gender)
colnames(T4)[colnames(T4)=="case_no"] <- "Case_no"
T4$Case_no <- as.factor(T4$Case_no)
chronotype <- merge(chronotype,T1,all=TRUE)
chronotype <- merge(chronotype,T2,all=TRUE)
chronotype <- merge(chronotype,T3,all=TRUE)
chronotype <- merge(chronotype,T4,all=TRUE)
additions_1 <- import("Family Interaction data_27nov08.sav")
additions_2 <- import("FITsubgroup_demos_symptoms.sav")
additions_1 <- dplyr::select(additions_1,case_no,prqsoc2:pbaitot2,parentpa2:parentna2,ccpse:ccnege,P_Intlz_Sx:EATQ_HAx_Surgency)
colnames(additions_1)[colnames(additions_1)=="case_no"] <- "Case_no"
additions_1$Case_no <- as.factor(additions_1$Case_no)
chronotype <- merge(chronotype,additions_1,all=TRUE)
chronotype <- chronotype[!(is.na(chronotype$T1_Total) == TRUE & is.na(chronotype$T2_Total) == TRUE & is.na(chronotype$T3_Total) == TRUE & is.na(chronotype$T4_MEQ_Total) == TRUE),]
chronotype <- dplyr::select(chronotype,Case_no,Gender,T1_Total,T1_ccesdtot,T2_Total,T2_ccesdtot,T3_Total,T3_ccesdtot,T1_cbaitot,T2_cbaitot,T3cbaitot,T4_ccesdtot2,T4_MEQ_Total,T4_cbaitot2,MDD_ever,prqsoc2:EATQ_HAx_Surgency)
hmm <- chronotype[(is.na(chronotype$T1_Total)) | (is.na(chronotype$T2_Total)) | (is.na(chronotype$T3_Total)) | (is.na(chronotype$T4_MEQ_Total)),]
hmm <- dplyr::select(hmm,Case_no,T1_Total,T2_Total,T3_Total,T4_MEQ_Total)
hmm <- hmm[!rowSums(is.na(hmm)) < 2,]
remove <- hmm$Case_no
chronotype <- chronotype[!chronotype$Case_no %in% remove, ]
chronotype <- dplyr::select(chronotype,-(P_Sx), -(P_Trait_PA))
chronotype %>%
dplyr::select(T1_Total,T2_Total,T3_Total,T4_MEQ_Total) %>%
missmap()
chronotype_long <- reshape(chronotype, direction='long',
varying=c('T1_cbaitot','T1_ccesdtot', 'T1_Total','T2_cbaitot', 'T2_ccesdtot', 'T2_Total','T3cbaitot','T3_ccesdtot','T3_Total','T4_cbaitot2',"T4_ccesdtot2","T4_MEQ_Total"),
timevar='Time',
times=c('1', '2','3','4'),
v.names=c('MEQ', 'cesd','BAI'),
idvar='Case_no')
chronotype_long$Case_no <- as.integer(chronotype_long$Case_no)
chronotype_long$Time <- as.numeric(chronotype_long$Time)
chronotype_long$MEQ <- as.numeric(chronotype_long$MEQ)
chronotype_long$Gender <- as.factor(chronotype_long$Gender)
test <- lme4::lmer(MEQ ~ Time*BAI+ (Time|Case_no),chronotype_long)
anova(test)
# Simple function for plotting the random effects from lmer() output
REplot <- function(out) {
plotREsim(REsim(out))  +
ggtitle('Plot of Random Effects', subtitle = 'Interval Estimates')
}
library(nlme)
lg.fit.q4 <- lme(fixed= cesd ~ 1 + Time + MEQ,
random= ~ 1 + Time + MEQ|Case_no,
correlation = corAR1(),
data=chronotype_long,
na.action=na.exclude)
summary(lg.fit.q4)
lg.fit.q4 <- lme(fixed= cesd ~ 1 + Time + MEQ,
random= ~ 1 + Time |Case_no,
data=chronotype_long,
na.action=na.exclude)
VarCorr(lg.fit.q4)
library(Amelia)
set.seed(10)
chronotype_long$Gender <- as.numeric(chronotype_long$Gender)
a.out <- amelia(chronotype_long, m = 25, ts = "Time", cs = "Case_no", idvars = c("MDD_ever","cesd","BAI"))
plot(a.out,which.vars = "MEQ")
overimpute(a.out, var = "MEQ")
tscsPlot(a.out, cs = "45", main = "Single Subject's imputed data",
var = "MEQ", ylim = c(0, 20))
for(q in 1:length(a.out$imputations)){
a.out$imputations[[q]]$Gender <- as.factor(a.out$imputations[[q]]$Gender)
}
a.out$imputations[[1]]
str(a.out$imputations[[1]])
a.out$imputations[[1]]
setwd("~/Documents/github/academic-kickstart/")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
setwd("~/Documents/github/new-academic-kickstart/")
blogdown::serve_site()
